---
- name: Set Apache user and group
  set_fact:
    www_group: "nginx"
    www_user: "nginx"

- name: Set Supervisor config path
  set_fact:
    supervisor_path: "/etc/supervisord.d/%s.ini"

- name: Set nginx log path
  set_fact:
    openwisp2_nginx_access_log: "/var/log/nginx/openwisp.access.log"
    openwisp2_nginx_error_log: "/var/log/nginx/openwisp.error.log error"

- name: Enable Codeready Builder Repo (RHEL only)
  community.general.rhsm_repository:
    name: codeready-builder-for-rhel-9-x86_64-rpms
  when: ansible_distribution == 'RedHat'

- name: Enable EPEL9
  dnf:
    name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm'
    state: present

- name: Install system packages
  dnf:
    name:
      - sudo
      - gcc
      - make
      - supervisor
      - openssl
      - openssl-devel
      - libffi-devel
      - python3
      - python3-virtualenv
      - python3-pip
      - chrony
      # needed to generate SSH key for push updates
      - openssh-clients
      - logrotate
      # required for celerybeat
      # - python3-gdbm - No RPM, Installed with pip
  ignore_errors: true
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install PIP packages
  ansible.builtin.pip:
    name: gdbm_compat
  ignore_errors: true
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install nginx
  dnf:
    name: nginx
  when: openwisp2_nginx_install

- name: Install redis
  dnf:
    name: redis
  notify:
    - Reload systemd
    - Start redis
  when: openwisp2_redis_install

# On the newer versions of redis, by default redis
# binds to localhost on ipv6 address which wouldn't
# let the service start if the server doesn't have
# ipv6 enabled. Hence, we set redis to listen on ipv4
- name: Set redis to listen on ipv4
  notify: Start redis
  when: openwisp2_redis_install
  lineinfile:
    path: /etc/redis/redis.conf
    regexp: '^bind 127\.0\.0\.1 ::1'
    line: 'bind 127.0.0.1'
    backrefs: true
  ignore_errors: true

- name: Start redis
  when: openwisp2_redis_install
  service:
    name: redis
    state: started

- name: Install geographic libraries
  dnf:
    name:
      - gdal
      - proj-devel
      - geos-devel
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install spatialite
  when: openwisp2_database.engine == "django.contrib.gis.db.backends.spatialite"
  dnf:
    name:
      - sqlite
      - libspatialite-devel
  retries: 5
  delay: 10
  register: result
  until: result is success
  notify: Reload systemd

- name: Install postgresql client drivers
  when: openwisp2_database.engine == "django.contrib.gis.db.backends.postgis"
  dnf:
    name: libpq-devel
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install cairo
  when: openwisp2_radius
  dnf:
    name:
      - cairo
      - pango
      # - libpangocairo-1.0-0 - TODO
      - gdk-pixbuf2
      - shared-mime-info
  tags: [openwisp2, radius]

# fixes issue described in https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
- name: Install acl if acting as non-root user
  dnf: name=acl
  when: ansible_user is not defined or ansible_user != 'root'
  retries: 5
  delay: 10
  register: result
  until: result is success
  ignore_errors: true

- name: Ensure supervisor is started
  service: name=supervisord state=started

- name: Install python3 packages
  dnf:
    name:
      - python3-pip
      - python3-devel
      - python3-virtualenv
  retries: 5
  delay: 10
  register: result
  until: result is success

    #- name: Install ntp
    #  when: openwisp2_install_ntp
    #dnf: name=ntp
    #retries: 5
    #delay: 10
    #register: result
    #until: result is success

- name: Install gettext
  dnf:
    name: gettext
  when: openwisp2_internationalization
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install fping
  when: openwisp2_monitoring
  dnf:
    name:
      - fping
  retries: 5
  delay: 10
  register: result
  until: result is success
